services:
  mysqldb:
    image: mysql:8
    container_name: mysqldb
    ports:
      - "3306:3306"
    environment:
      MYSQL_DATABASE: ${MYSQL_INITDB_DATABASE}
      MYSQL_USER: ${MYSQL_INITDB_USER}
      MYSQL_PASSWORD: ${MYSQL_INITDB_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${MYSQL_INITDB_ROOT_PASSWORD}
    volumes:
      - mysql-data:/var/lib/mysql

  mongodb:
    image: mongo:6
    container_name: mongodb
    ports:
      - "27018:27017"
    environment:
      MONGO_INITDB_DATABASE: ${MONGO_INITDB_DATABASE}
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
    volumes:
      - mongo-data:/data/db

  eurekaserver:
    build:
      context: ./services/eurekaserver
    container_name: eurekaserver
    ports:
      - "8761:8761"
    environment:
      - "SPRING_PROFILES_ACTIVE=docker"

  configserver:
    build:
      context: ./services/configserver
    container_name: configserver
    ports:
      - "5555:5555"
  
  ui:
    build:
      context: ./services/ui
    container_name: ui
    ports:
      - "5001:5001"
    environment:
      - "SPRING_PROFILES_ACTIVE=docker"

  gatewayapi:
    build:
      context: ./services/gatewayapi
    container_name: gatewayapi
    ports:
      - "5005:5005"
    depends_on:
      - eurekaserver
      - configserver
    environment:
      - "SPRING_PROFILES_ACTIVE=docker"
      - WAIT_HOSTS=eurekaserver:8761,configserver:5555
      - WAIT_HOSTS_TIMEOUT=1000
    command: sh -c "/wait && java -jar gatewayapi.jar"

  evaluationrisqueapi:
    build:
      context: ./services/evaluationrisqueapi
    container_name: evaluationrisqueapi
    ports:
      - "5003:5003"
    depends_on:
      - eurekaserver
      - configserver
    environment:
      - "SPRING_PROFILES_ACTIVE=docker"
      - WAIT_HOSTS=eurekaserver:8761,configserver:5555
      - WAIT_HOSTS_TIMEOUT=8000
    command: sh -c "/wait && java -jar evaluationrisqueapi.jar"

  noteapi:
    build:
      context: ./services/noteapi
    container_name: noteapi
    ports:
      - "5002:5002"
    depends_on:
      - mongodb
      - eurekaserver
      - configserver
    environment:
      - "SPRING_PROFILES_ACTIVE=docker"
      - WAIT_HOSTS=mongodb:27017,eurekaserver:8761,configserver:5555
      - WAIT_HOSTS_TIMEOUT=8000
    command: sh -c "/wait && java -jar noteapi.jar"

  patientapi:
    build:
      context: ./services/patientapi
    container_name: patientapi
    ports:
      - "5000:5000"
    depends_on:
      - mysqldb
      - eurekaserver
      - configserver
    environment:
      - "SPRING_PROFILES_ACTIVE=docker"
      - WAIT_HOSTS=mysqldb:3306,eurekaserver:8761,configserver:5555,noteapi:5002
      - WAIT_HOSTS_TIMEOUT=20000
    command: sh -c "/wait && java -jar patientapi.jar"

volumes:
  mysql-data:
  mongo-data:
