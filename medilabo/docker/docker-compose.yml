services:
  mysqldb:
    image: mysql:8
    container_name: mysqldb
    ports:
      - "3306:3306"
    environment:
      MYSQL_DATABASE: ${MYSQL_INITDB_DATABASE}
      MYSQL_USER: ${MYSQL_INITDB_USER}
      MYSQL_PASSWORD: ${MYSQL_INITDB_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${MYSQL_INITDB_ROOT_PASSWORD}
    volumes:
      - mysql-data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost"]
      interval: 5s
      timeout: 3s
      retries: 5
      start_period: 20s

  authdb:
    image: postgres:14-alpine
    container_name: authdb
    ports:
      - "5432:5432"
    volumes:
      -  postgres-data:/var/lib/postgresql
    environment:
      POSTGRES_DB: ${POSTGRES_INITDB_DATABASE}
      POSTGRES_USER: ${POSTGRES_INITDB_ROOT_USERNAME}
      POSTGRES_PASSWORD: ${POSTGRES_INITDB_ROOT_PASSWORD}

  mongodb:
    image: mongo:6
    container_name: mongodb
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_DATABASE: ${MONGO_INITDB_DATABASE}
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
    volumes:
      - mongo-data:/data/db
    healthcheck:
      test: ["CMD-SHELL", "echo 'db.runCommand({ ping: 1 }).ok' | mongosh localhost:27017/test --quiet | grep 1"]
      interval: 5s
      timeout: 3s
      retries: 5
      start_period: 20s

 

volumes:
  mysql-data:
  mongo-data:
  postgres-data: